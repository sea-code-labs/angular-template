# Nginx configuration for serving an Angular application
#
# Usage Instructions:
# 1. Ensure Nginx is installed:
#    - On Ubuntu/Debian: sudo apt update && sudo apt install nginx
#    - On CentOS/RHEL: sudo yum install nginx
#
# 2. Build your Angular application using:
#    - ng build --prod
#    - This generates the production build in the dist/ folder.
#
# 3. Copy the Angular build files to Nginx's default web root:
#    - sudo cp -r dist/your-app-name/* /usr/share/nginx/html/
#
# 4. Save this Nginx configuration to /etc/nginx/sites-available/angular-app
#    - sudo nano /etc/nginx/sites-available/angular-app
#
# 5. Enable the configuration by creating a symlink to sites-enabled:
#    - sudo ln -s /etc/nginx/sites-available/angular-app /etc/nginx/sites-enabled/
#
# 6. Test the Nginx configuration to ensure there are no errors:
#    - sudo nginx -t
#
# 7. Reload Nginx to apply the new configuration:
#    - sudo systemctl reload nginx
#
# Optional: Enable Nginx to start on boot:
#    - sudo systemctl enable nginx
#
# ---------------------------------------------

server {
    # Listen on port 80 for incoming HTTP requests.
    listen 80;

    # Define the server name. Adjust if using a specific domain.
    server_name localhost;

    # Serve static files for the Angular application.
    location / {
        # Specify the root directory where the Angular application is located.
        root /usr/share/nginx/html;

        # Try serving the file or fallback to index.html (client-side routing for Angular).
        try_files $uri $uri/ /index.html;
    }

    # Prevent access to hidden files such as .git, .env, or backup files.
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Security headers.
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'" always;

    # Enable Gzip compression for faster load times.
    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_min_length 256;

    # Optional: Caching static assets (e.g., CSS, JS, images) for performance.
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff2?)$ {
        expires 1w;
        add_header Cache-Control "public";
    }

    # Optional: Define location blocks for API proxying or other services.
    # Uncomment and configure if you need to proxy API requests to a backend service.
    # location /api {
    #     # Forward API requests to the backend service.
    #     proxy_pass http://backend:port;
    #     # Pass necessary headers to the backend.
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
}
